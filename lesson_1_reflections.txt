How did viewing a diff between two versions of a file help you see the bug that was introduced?

The diff tool compares the two files and indicates which lines are different. Therefore, it's easy to spot the original text versus the new text.


How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

You can see all the changes made over time and see how your programming skills should have gotten better over time.


What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Manually committing lets you control the commit point which allows you to create good stopping points for features or bug fixes. Automatically saving can be good for people who forget to save on a regular basis.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Multiple files that are related with related changes should be in the same commit.

How can you use the commands git log and git diff to view the history of files?

Git log will show all the commits for the files in that repo. Git diff can be used to show the commit differences between two files.

How might using version control make you more confident to make changes that could break something?

You can always checkout previous versions to see when a bug was introduced.

Now that you have your workspace set up, what do you want to try using Git for?

To make commits